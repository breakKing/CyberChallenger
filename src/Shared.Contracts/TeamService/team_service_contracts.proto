syntax = "proto3";

option csharp_namespace = "Shared.Contracts.TeamService";

import "google/protobuf/wrappers.proto";
import "shared_contracts.proto";
import "team_service_models.proto";

// Запрос на получение команд по фильтрам (используя классическую пагинацию)
message ReadManyTeamsByOffsetGrpcRequest {
  // Поиск по имени
  google.protobuf.StringValue filter_string = 1;
  reserved 2, 3, 4;
  OffsetPaginationGrpcRequest pagination_request = 5;
}

// Ответ с отфильтрованными командами (используя классическую пагинацию)
message ReadManyTeamsByOffsetGrpcResponse {
  repeated TeamShortGrpcDto items = 1;
  OffsetPaginationGrpcResponse pagination_response = 2;
  HandlingStatusGrpcResponse status_response = 3;
}

// Запрос на получение команд по фильтрам (используя курсорную пагинацию)
message ReadManyTeamsByCursorGrpcRequest {
  // Поиск по имени
  google.protobuf.StringValue filter_string = 1;
  reserved 2, 3, 4;
  CursorPaginationGrpcRequest pagination_request = 5;
}

// Ответ с отфильтрованными командами (используя курсорную пагинацию)
message ReadManyTeamsByCursorGrpcResponse {
  repeated TeamShortGrpcDto items = 1;
  CursorPaginationGrpcResponse pagination_response = 2;
  HandlingStatusGrpcResponse status_response = 3;
}

// Запрос на получение команды по id
message ReadOneTeamByIdGrpcRequest {
  string id = 1;
}

// Ответ с командой, полученной по id
message ReadOneTeamByIdGrpcResponse {
  TeamFullGrpcDto data = 1;
  HandlingStatusGrpcResponse status_response = 2;
}

// Запрос для создания команды
message CreateTeamGrpcRequest {
  string name = 1;
  string game_id = 2;
}

// Ответ с информацией о созданной команде
message CreateTeamGrpcResponse {
  google.protobuf.StringValue id = 1;
  HandlingStatusGrpcResponse status_response = 2;
}

// Запрос для редактирования команды
message UpdateTeamGrpcRequest {
  string id = 1;
  string name = 2;
}

// Ответ после редактирования команды
message UpdateTeamGrpcResponse {
  HandlingStatusGrpcResponse status_response = 1;
}

// Запрос для удаления команды
message DeleteTeamGrpcRequest {
  string id = 1;
}

// Ответ после удаления команды
message DeleteTeamGrpcResponse {
  HandlingStatusGrpcResponse status_response = 1;
}